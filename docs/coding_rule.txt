◆Zendコーディング規約
  ZENDFRAMEWORK
  http://zendframework.com/manual/ja/coding-standard.naming-conventions.html

  Zendコーディング規約
  http://www.yoshino-tech.com/w/index.php?Zend%2F%A5%B3%A1%BC%A5%C7%A5%A3%A5%F3%A5%B0%B5%AC%CC%F3


◆文字コード
  UTF-8


◆改行コード
  LF もしくは CR+LF


◆サンプルソース
  （コントローラ）
    application\modules\site\controllers\DummyController.php
  （モデル）
    application\modules\site\models\Dummy.php
  （ビュー）
    application\modules\site\views\scripts\dummy\*.html

◆データベース接続先指定方法
  (1) Zend_Db と Zend_Db_Tableを利用
    $db = Zend_Registry::get('db');
    $dummyTable = new Lib_Db_Table_Dummy($db)


  (3) 共通関数を利用
    $dataObj = new Lib_Db_DataObject(array(
            'table' => new Lib_Db_Table_Dummy
        ));

    //上記と同じですが、少し便利な書き方
    $dataObj = Lib_Db_Util::getDataObject('dummy');

    //読込用メソッド
    $dataObj->getRows(...)
    $dataObj->getRow(...)
    $dataObj->getOne(...)
    $dataObj->getPairs(...)
    $dataObj->getCol(...)
    $dataObj->select(...)
    $dataObj->nextSeqNo(...)
    $dataObj->maxPlus1(...)
    
    //書込用メソッド
    $dataObj->save(...)
    $dataObj->insert(...)
    $dataObj->update(...)
    $dataObj->delete(...)
    $dataObj->beginTransaction(...)

◆画像指定方法
  (1) docroot フォルダ下の画像
    例：
    <img src="/images/world-book.gif" />

  (2) コンテンツ画像
  ・直接HTMLで指定：
    ①リサイズしない
    <img src="/image/contents?src=samples/sample01.jpg" />
    ②リサイズする
    <img src="/image/contents?src=samples/sample01.jpg&w=100&h=100" />

  ・Smartyプラグインで指定：
    ①リサイズしない
    {contents_img src=samples/sample01.jpg}
    ②リサイズする
    {contents_img src=samples/sample01.jpg w=100 h=100}

  (3) アップロード画像
  ・直接HTMLで指定：
    ①リサイズしない
    <img src="/image/uploads?src=dummy/sample01.jpg" />
    ②リサイズする
    <img src="/image/uploads?src=dummy/sample01.jpg&w=100&h=100" />

  ・Smartyプラグインで指定：
    ①リサイズしない
    {uploads_img src=dummy/sample01.jpg}
    ②リサイズする
    {uploads_img src=dummy/sample01.jpg w=100 h=100}

  (4) ビューヘルパーでサムネイル自動作成と表示
    ①ディフォルトサイズ
    {$this->thumb('contents/sample/dog.jpg')}
    ②サイズ指定
    {$this->thumb('contents/sample/dog.jpg', 120, 120)}

◆ message.ini からメッセージを取得する方法
  (1) message.ini ファイルのは application/configs/lang/jp/ に配置します。
　(2) メッセージの種類(セクション)： 
    [error] ;エラー
    [waning] ;ワーニング
    [info] ;通常

    記述例）
    [error]
    E0000 = "エラーが発生しました。"

  (3) メッセージの取得方法
　　$msg = Lib_Util_Message::get($section, $code)

  -------------------------------------------------------
  使用例：

  ① 置換文字列なし
    設定:
    E0000 = "エラーが発生しました。"

    取得:
    $this->view->msg = Lib_Util_Message::get('error', 'E0000');

  ② 置換文字列あり
    設定: 
    E1002 = "'%value%' は不正な文字 '%invalid%' を含んでいます。"

    取得: 
    $this->view->msg = Lib_Util_Message::get('error', 'E1002', array('value' => '入力したもの', 'invalid' => 'もの'));
  -------------------------------------------------------


◆iniファイルに置換文字列設定について
  [] ではなく %% を使用すること。例） %VALUE%
  ※mkreiでは [] を使っているが、[] はiniファイルのセクションの表す為、使用禁止。

◆コントローラ内共通情報取得する方法
　(1) パラメータ
   $module = $this->_params['module'];
   $pp1 = $this->_params['pp1'];

　(2)ユーザ情報
   $userId = $this->_userInfo['user_id'];

   ※上記の共通情報、ビューに渡してあります、ビュー内変数名前は$params, $userInfo。

-------------------------------------------------------
◆メール送信例
Lib_Util_SimpleMail::send(array(
    'from' => 'no-reply@bookasp.hlsys.net',
    'to' => 'ozw@tenda.co.jp',
    'subject' => 'BookAspメール送信テスト',
    'body' => "BookAspメール送信テストです。 \n --  %name% \n -- %date%",
    'replace' => array('name' => '欧', 'date' => Lib_Util_Date::getNow())
));


-------------------------------------------------------
◆共通エラーページ表示
　(1) エラーコードと置換文字列の配列指定
   $this->_displaySysError('E1002', array('value' => '入力した文字列ABC', 'invalid' => 'ABC'));

　(2) 直接エラーメッセージ指定
   $this->_displaySysErrorMsg('エラーが発生しています');

